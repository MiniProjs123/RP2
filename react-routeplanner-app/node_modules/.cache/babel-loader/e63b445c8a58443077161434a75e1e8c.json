{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/login.jsx\";\nimport React from \"react\";\nimport Joi from \"joi\";\nimport Form from \"../common/form\";\nimport { Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      // .label adds more control, but when omitted it is capialize by default (seemingly)\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    this.doSubmit = e => {\n      const {\n        state\n      } = this.props.location;\n      const {\n        username,\n        password\n      } = this.state.data;\n      const user = this.doLogin(username, password);\n      console.log(\"dummy doSubmit...password = \" + user.password);\n      window.location = \"/route_planner\"; // if (user === undefined) {\n      //   const errors = { ...this.state.errors };\n      //   errors.username = \"Check your credentials and try again\"; \n      //   this.setState({ errors });\n      // } else {\n      //   window.location = state ? state.from.pathname : \"/route_planner\";  \n      // }\n    };\n\n    this.doLogin = async (username, password) => {\n      const user = await auth.login(username, password);\n      return user;\n    };\n\n    this.doReset = event => {\n      this.setState({\n        data: {\n          username: \"\",\n          password: \"\"\n        }\n      });\n    };\n  }\n\n  render() {\n    if (auth.getCurentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"username\", \"Username\", true), this.renderInput(\"password\", \"Password\", false, \"password\"), this.renderButton(\"Login\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reset-btn\",\n          type: \"button\",\n          className: \"btn btn-warning m-2\",\n          onClick: this.doReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/login.jsx"],"names":["React","Joi","Form","Redirect","auth","LoginForm","state","data","username","password","errors","schema","string","required","label","doSubmit","e","props","location","user","doLogin","console","log","window","login","doReset","event","setState","render","getCurentUser","handleSubmit","renderInput","renderButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,SAAN,SAAwBH,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;AAAA,SAM3BC,MAN2B,GAMlB;AACPH,MAAAA,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GACPC,QADO,GAEPC,KAFO,CAED,UAFC,CADH;AAGe;AACtBL,MAAAA,QAAQ,EAAER,GAAG,CAACW,MAAJ,GACPC,QADO,GAEPC,KAFO,CAED,UAFC;AAJH,KANkB;;AAAA,SAe3BC,QAf2B,GAehBC,CAAC,IAAI;AACd,YAAM;AAAEV,QAAAA;AAAF,UAAY,KAAKW,KAAL,CAAWC,QAA7B;AACA,YAAM;AAAEV,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKH,KAAL,CAAWC,IAA1C;AACA,YAAMY,IAAI,GAAG,KAAKC,OAAL,CAAaZ,QAAb,EAAuBC,QAAvB,CAAb;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCH,IAAI,CAACV,QAAlD;AAEAc,MAAAA,MAAM,CAACL,QAAP,GAAkB,gBAAlB,CAPc,CASd;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA/B4B;;AAAA,SAkC3BE,OAlC2B,GAkCjB,OAAOZ,QAAP,EAAiBC,QAAjB,KAA8B;AACtC,YAAMU,IAAI,GAAG,MAAMf,IAAI,CAACoB,KAAL,CAAWhB,QAAX,EAAqBC,QAArB,CAAnB;AACA,aAAOU,IAAP;AACD,KArC0B;;AAAA,SAsD3BM,OAtD2B,GAsDhBC,KAAD,IAAW;AACnB,WAAKC,QAAL,CAAc;AAAEpB,QAAAA,IAAI,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,QAAQ,EAAE;AAAzB;AAAR,OAAd;AACD,KAxD0B;AAAA;;AA6D3BmB,EAAAA,MAAM,GAAG;AACP,QAAIxB,IAAI,CAACyB,aAAL,EAAJ,EAA0B,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AAE1B,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,IAAzC,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,KAAzC,EAAgD,UAAhD,CAFH,EAGG,KAAKC,YAAL,CAAkB,OAAlB,CAHH,eAIE;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAqC,UAAA,SAAS,EAAC,qBAA/C;AAAqE,UAAA,OAAO,EAAE,KAAKP,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA3E0B;;AA8E7B,eAAepB,SAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi\";\nimport Form from \"../common/form\";\nimport { Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"), // .label adds more control, but when omitted it is capialize by default (seemingly)\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = e => {\n    const { state } = this.props.location;\n    const { username, password } = this.state.data;\n    const user = this.doLogin(username, password);\n\n    console.log(\"dummy doSubmit...password = \" + user.password);\n\n    window.location = \"/route_planner\";  \n\n    // if (user === undefined) {\n    //   const errors = { ...this.state.errors };\n    //   errors.username = \"Check your credentials and try again\"; \n    //   this.setState({ errors });\n    // } else {\n    //   window.location = state ? state.from.pathname : \"/route_planner\";  \n    // }\n};\n\n\n  doLogin = async (username, password) => {\n    const user = await auth.login(username, password);\n    return user;\n  }\n    \n\n//   doSubmit = e => {\n//     const { state } = this.props.location;\n//     const { username, password } = this.state.data;\n//     const user = auth.login(username, password);\n\n//     if (user === undefined) {\n//       const errors = { ...this.state.errors };\n//       errors.username = \"Check your credentials and try again\"; \n//       this.setState({ errors });\n//     } else {\n//       window.location = state ? state.from.pathname : \"/search-metadata\";  \n//     }\n// };\n\n  doReset = (event) => {\n    this.setState({ data: {username: \"\", password: \"\"}});\n  };\n\n\n\n\n  render() {\n    if (auth.getCurentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <React.Fragment>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\", true)}\n          {this.renderInput(\"password\", \"Password\", false, \"password\")}\n          {this.renderButton(\"Login\")}\n          <button id=\"reset-btn\" type=\"button\" className=\"btn btn-warning m-2\" onClick={this.doReset}>Reset</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}