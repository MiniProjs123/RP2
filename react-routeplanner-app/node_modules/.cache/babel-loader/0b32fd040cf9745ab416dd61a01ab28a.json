{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi\";\nimport Form from \"../common/form\";\nimport auth from \"../services/authService\"; //import { register } from \"../services/userService\";\n// BETTER syntax for importing all functions from userService.js\n\nimport * as userService from \"../services/userService\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        name: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\").min(1).email({\n        minDomainAtoms: 2\n      }),\n      password: Joi.string().required().min(5).label(\"Password\"),\n      name: Joi.string().required().label(\"Name\")\n    };\n\n    this.doSubmit = async () => {\n      // const { username, password, name } = this.state.data;\n      // this.state.data.username\n      // this.state.data.password\n      // this.state.data.name\n      try {\n        const response = await userService.registerUser(this.state.data);\n        console.log(response); // WAS !!!! localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n\n        auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n        window.location = \"/\"; //this.props.history.push(\"/\");\n      } catch (e) {\n        if (e.response && e.response.status === 400) {\n          // ie we as the client, did something wrong\n          // pass in new error into the state\n          // see form.handleChange()\n          const errors = { ...this.state.errors\n          };\n          errors.username = e.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"username\", \"Username\", true, \"email\"), this.renderInput(\"password\", \"Password\", false, \"password\"), this.renderInput(\"name\", \"Name\", true), this.renderButton(\"Register\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/registerForm.jsx"],"names":["React","Joi","Form","auth","userService","RegisterForm","state","data","username","password","name","errors","schema","string","required","label","min","email","minDomainAtoms","doSubmit","response","registerUser","console","log","loginWithJwt","headers","window","location","e","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CAEA;AACA;;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;;AAEA,MAAMC,YAAN,SAA2BH,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsB;AAAA,SAM9BC,MAN8B,GAMrB;AACPJ,MAAAA,QAAQ,EAAEP,GAAG,CAACY,MAAJ,GACPC,QADO,GAEPC,KAFO,CAED,UAFC,EAGPC,GAHO,CAGH,CAHG,EAIPC,KAJO,CAID;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAJC,CADH;AAMPT,MAAAA,QAAQ,EAAER,GAAG,CAACY,MAAJ,GACPC,QADO,GAEPE,GAFO,CAEH,CAFG,EAGPD,KAHO,CAGD,UAHC,CANH;AAUPL,MAAAA,IAAI,EAAET,GAAG,CAACY,MAAJ,GACHC,QADG,GAEHC,KAFG,CAEG,MAFH;AAVC,KANqB;;AAAA,SA8B9BI,QA9B8B,GA8BnB,YAAY;AACrB;AACA;AACA;AACA;AACA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,YAAZ,CAAyB,KAAKf,KAAL,CAAWC,IAApC,CAAvB;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAFE,CAIF;;AACAjB,QAAAA,IAAI,CAACqB,YAAL,CAAkBJ,QAAQ,CAACK,OAAT,CAAiB,cAAjB,CAAlB;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB,CANE,CAOF;AACD,OARD,CAQE,OAAOC,CAAP,EAAU;AACV,YAAIA,CAAC,CAACR,QAAF,IAAcQ,CAAC,CAACR,QAAF,CAAWS,MAAX,KAAsB,GAAxC,EAA6C;AAC3C;AAEA;AACA;AACA,gBAAMlB,MAAM,GAAG,EAAE,GAAG,KAAKL,KAAL,CAAWK;AAAhB,WAAf;AACAA,UAAAA,MAAM,CAACH,QAAP,GAAkBoB,CAAC,CAACR,QAAF,CAAWb,IAA7B;AACA,eAAKuB,QAAL,CAAc;AAAEnB,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KAtD6B;AAAA;;AAwD9BoB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,IAAzC,EAA+C,OAA/C,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,KAAzC,EAAgD,UAAhD,CAFH,EAGG,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,EAAiC,IAAjC,CAHH,EAIG,KAAKC,YAAL,CAAkB,UAAlB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApE6B;;AAuEhC,eAAe7B,YAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi\";\nimport Form from \"../common/form\";\nimport auth from \"../services/authService\";\n\n//import { register } from \"../services/userService\";\n// BETTER syntax for importing all functions from userService.js\nimport * as userService from \"../services/userService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\")\n      .min(1)\n      .email({ minDomainAtoms: 2 }),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  /*  // JOI:  https://www.npmjs.com/package/joi\nusername: Joi.string().alphanum().min(3).max(30).required(),\n    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),\n    access_token: [Joi.string(), Joi.number()],\n    birthyear: Joi.number().integer().min(1900).max(2013),\n    email: Joi.string().email({ minDomainAtoms: 2 })\n\n*/\n\n  doSubmit = async () => {\n    // const { username, password, name } = this.state.data;\n    // this.state.data.username\n    // this.state.data.password\n    // this.state.data.name\n    try {\n      const response = await userService.registerUser(this.state.data);\n      console.log(response);\n\n      // WAS !!!! localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n      //this.props.history.push(\"/\");\n    } catch (e) {\n      if (e.response && e.response.status === 400) {\n        // ie we as the client, did something wrong\n\n        // pass in new error into the state\n        // see form.handleChange()\n        const errors = { ...this.state.errors };\n        errors.username = e.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Registration</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\", true, \"email\")}\n          {this.renderInput(\"password\", \"Password\", false, \"password\")}\n          {this.renderInput(\"name\", \"Name\", true)}\n          {this.renderButton(\"Register\")}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}