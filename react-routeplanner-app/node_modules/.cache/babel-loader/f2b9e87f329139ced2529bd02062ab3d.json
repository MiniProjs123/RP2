{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/routePlanner.jsx\";\nimport Form from \"../common/form\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi\";\nimport { getAllStations, determineRoute } from \"../services/routePlannerService\";\n\nclass RoutePlanner extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        start: \"\",\n        destination: \"\"\n      },\n      stationList: [],\n      successfulLastSearch: false,\n      routeQuery: {\n        routeInfo: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      start: Joi.string().required(),\n      destination: Joi.string().required()\n    };\n\n    this.doSubmit = () => {\n      const {\n        start,\n        destination\n      } = this.state.data;\n      this.findRoute(start, destination);\n    };\n\n    this.handleProceedToPurchase = () => {\n      const {\n        start,\n        destination\n      } = this.state.data;\n      const {\n        routeInfo,\n        successfulLastSearch\n      } = this.state;\n      console.log(\"start = \", start);\n      console.log(\"destination = \", destination);\n      console.log(\"route info = \", routeInfo);\n      console.log(\"successful last search = \", successfulLastSearch);\n      console.log(\"TODO: PERSIST BASKET HERE\");\n      window.location = \"/view_basket/\" + start + \"/\" + destination;\n    };\n  }\n\n  async componentDidMount() {\n    await getAllStations().then(response => response.json()).then(stationList => this.setState({\n      stationList\n    }));\n  }\n\n  async findRoute(start, destination) {\n    await determineRoute(start, destination).then(response => response.json()).then(data => this.setState({\n      routeQuery: data,\n      successfulLastSearch: true\n    }));\n  }\n\n  render() {\n    const {\n      match,\n      history\n    } = this.props; // TODO \n\n    const {\n      successfulLastSearch,\n      routeQuery,\n      stationList\n    } = this.state;\n    const stations = stationList.map(s => {\n      return {\n        _id: s,\n        name: s\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lower-space\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Find Route Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), this.renderSelect(\"start\", \"Start\", false, stations, \"300px\"), this.renderSelect(\"destination\", \"Destination\", false, stations, \"300px\"), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.renderButton(\"Find Route\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [this.renderReadOnlyTextArea(\"routeQuery.routeInfo\", \"\", false, \"80%\", \"12\", routeQuery.routeInfo), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.handleProceedToPurchase,\n          disabled: !successfulLastSearch,\n          children: \"Purchase Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RoutePlanner;","map":{"version":3,"sources":["/Users/paulbickell/Documents/Oct2020Workspace/RP2-master/react-routeplanner-app/src/components/routePlanner.jsx"],"names":["Form","React","Component","Joi","getAllStations","determineRoute","RoutePlanner","state","data","start","destination","stationList","successfulLastSearch","routeQuery","routeInfo","errors","schema","_id","string","required","doSubmit","findRoute","handleProceedToPurchase","console","log","window","location","componentDidMount","then","response","json","setState","render","match","history","props","stations","map","s","name","handleSubmit","renderSelect","renderButton","renderReadOnlyTextArea"],"mappings":"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","sourcesContent":["import Form from \"../common/form\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi\";\nimport { getAllStations, determineRoute } from \"../services/routePlannerService\";\n\nclass RoutePlanner extends Form {\n  state = {\n    data: {\n      start: \"\",\n      destination: \"\"\n    },\n    stationList: [],\n    successfulLastSearch: false,\n    routeQuery: {\n      routeInfo: \"\"\n    },\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    start: Joi.string()\n      .required(),\n    destination: Joi.string()\n      .required()\n  };\n\n  async componentDidMount() {\n    await getAllStations().then(response => response.json())\n                .then(stationList => this.setState({stationList}) );\n  }\n\n  async findRoute(start, destination) {\n      await determineRoute(start, destination)\n      .then(response => response.json())\n      .then(data => this.setState({routeQuery: data, successfulLastSearch: true}));\n  }\n\n  doSubmit = () => {\n    const { start, destination } = this.state.data;\n    this.findRoute(start, destination);\n  };\n\n  handleProceedToPurchase = () => {\n    const { start, destination } = this.state.data;\n    const {routeInfo, successfulLastSearch} = this.state;\n\n    console.log(\"start = \", start);\n    console.log(\"destination = \", destination);\n    console.log(\"route info = \", routeInfo);\n    console.log(\"successful last search = \", successfulLastSearch);\n    console.log(\"TODO: PERSIST BASKET HERE\");\n\n    window.location = \"/view_basket/\" + start + \"/\" + destination;\n  };\n\n  render() {\n    const { match, history } = this.props; // TODO \n    const { successfulLastSearch, routeQuery, stationList } = this.state;\n\n    const stations = stationList.map((s)=> { \n               return { _id: s, name: s }; \n           }); \n  \n    \n    return (\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit} className=\"main-content\">\n          <div className=\"lower-space\">\n            <h1>Find Route Screen</h1>\n          </div>\n          {this.renderSelect(\n            \"start\",\n            \"Start\",\n            false,\n            stations,\n            \"300px\"\n          )}\n          {this.renderSelect(\n            \"destination\",\n            \"Destination\",\n            false,\n            stations,\n            \"300px\"\n          )}\n\n          <div className=\"col\">{this.renderButton(\"Find Route\")}</div>\n        </form>\n\n        <div className=\"main-content\">\n          {this.renderReadOnlyTextArea(\n            \"routeQuery.routeInfo\",\n            \"\",\n            false,\n            \"80%\",\n            \"12\",\n            routeQuery.routeInfo\n          )}\n          <button\n            className=\"btn btn-primary\"\n            onClick={this.handleProceedToPurchase}\n            disabled={!successfulLastSearch}\n          >\n            Purchase Ticket\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RoutePlanner;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}